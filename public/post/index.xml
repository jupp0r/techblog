<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Encounters in Software Engineering</title>
    <link>https://tech.jupp0r.de/post/</link>
    <description>Recent content in Posts on Encounters in Software Engineering</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Fri, 30 Jun 2017 18:34:51 +0200</lastBuildDate>
    
	<atom:link href="https://tech.jupp0r.de/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>N-API - writing node modules like it&#39;s 2018</title>
      <link>https://tech.jupp0r.de/article/n-api---writing-node-modules-like-its-2018/</link>
      <pubDate>Fri, 30 Jun 2017 18:34:51 +0200</pubDate>
      
      <guid>https://tech.jupp0r.de/article/n-api---writing-node-modules-like-its-2018/</guid>
      <description>Yesterday, I gave a tech talk at work about Node&amp;rsquo;s new N-API for ABI-compatible native addons across node versions. Enjoy!
 </description>
    </item>
    
    <item>
      <title>Rust - A Safe Alternative to C&#43;&#43;</title>
      <link>https://tech.jupp0r.de/article/rust---a-safe-alternative-to-c--/</link>
      <pubDate>Fri, 23 Sep 2016 16:28:52 +0200</pubDate>
      
      <guid>https://tech.jupp0r.de/article/rust---a-safe-alternative-to-c--/</guid>
      <description>I recently gave a workshop at work that gives a short introduction to Rust and shows how it can make developers much more productive by eliminating memory errors and data races.
 </description>
    </item>
    
    <item>
      <title>Almost Always Auto</title>
      <link>https://tech.jupp0r.de/article/almost-always-auto/</link>
      <pubDate>Wed, 15 Jun 2016 11:22:50 +0200</pubDate>
      
      <guid>https://tech.jupp0r.de/article/almost-always-auto/</guid>
      <description>Here&amp;rsquo;s a short presentation I gave at work as part of a C++ course I held. It&amp;rsquo;s about the usage of the auto keyword and why you should almost always prefer it to explicitly specifying the type.
 </description>
    </item>
    
  </channel>
</rss>